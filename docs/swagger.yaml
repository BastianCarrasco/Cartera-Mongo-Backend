basePath: /
definitions:
  models.Academic:
    properties:
      a_materno:
        type: string
      a_paterno:
        type: string
      nombre:
        description: ¡Aquí están los campos que faltaban!
        type: string
    type: object
  models.Project:
    properties:
      academicos:
        items:
          $ref: '#/definitions/models.Academic'
        type: array
      apoyo:
        type: string
      comentarios:
        type: string
      convocatoria:
        type: string
      detalle_apoyo:
        type: string
      estatus:
        type: string
      estudiantes:
        items:
          $ref: '#/definitions/models.Student'
        type: array
      fecha_postulacion:
        type: string
      id:
        type: string
      id_kth:
        type: string
      inst_conv:
        type: string
      monto:
        type: number
      nombre:
        type: string
      tematica:
        type: string
      tipo_convocatoria:
        type: string
      unidad:
        type: string
    type: object
  models.Student:
    properties:
      a_materno:
        type: string
      a_paterno:
        type: string
      nombre:
        type: string
    type: object
host: '{{.SWAGGER_HOST}}'
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a Project API with Go and MongoDB, named
    Cartera-Mongo-Backend.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cartera-Mongo-Backend Project API
  version: "1.0"
paths:
  /funciones/data:
    get:
      description: Retrieve a list of all projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all projects
      tags:
      - Projects
  /projects:
    post:
      consumes:
      - application/json
      description: Add a new project to the database
      parameters:
      - description: Project object to be created
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.Project'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new project
      tags:
      - Projects
  /projects/{id}:
    delete:
      description: Delete a project by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Project not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a project
      tags:
      - Projects
    get:
      description: Retrieve a single project by its ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Project not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a project by ID
      tags:
      - Projects
    put:
      consumes:
      - application/json
      description: Update project details by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated project object
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.Project'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Invalid ID or Bad Request
          schema:
            type: string
        "404":
          description: Project not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update an existing project
      tags:
      - Projects
schemes:
- https
swagger: "2.0"
